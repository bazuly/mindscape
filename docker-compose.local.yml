volumes:
  dream_local_postgres_data: {}
  dream_local_postgres_data_backups: {}
  dream_local_redis_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: dream_local_django
    container_name: dream_local_django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: dream_production_postgres
    container_name: dream_local_postgres
    volumes:
      - dream_local_postgres_data:/var/lib/postgresql/data
      - dream_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: docker.io/redis:6
    container_name: dream_local_redis

    volumes:
      - dream_local_redis_data:/data


  # celeryworker:
  #   <<: *django
  #   image: dream_local_celeryworker
  #   container_name: dream_local_celeryworker
  #   depends_on:
  #     - redis
  #     - postgres
  #   ports: []
  #   command: /start-celeryworker

  # celerybeat:
  #   <<: *django
  #   image: dream_local_celerybeat
  #   container_name: dream_local_celerybeat
  #   depends_on:
  #     - redis
  #     - postgres
  #   ports: []
  #   command: /start-celerybeat

  # flower:
  #   <<: *django
  #   image: dream_local_flower
  #   container_name: dream_local_flower
  #   ports:
  #     - '5555:5555'
  #   command: /start-flower

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static
    ports:
      - 80:80
    depends_on:
      - django
    # networks:
    #   - backend

